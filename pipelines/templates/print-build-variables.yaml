steps:
  - script: |-
      echo Build.ArtifactStagingDirectory: $(Build.ArtifactStagingDirectory)
      echo Build.BuildId: $(Build.BuildId)
      echo Build.BuildNumber: $(Build.BuildNumber)
      echo Build.BuildUri: $(Build.BuildUri)
      echo Build.BinariesDirectory: $(Build.BinariesDirectory)
      echo Build.DefinitionName: $(Build.DefinitionName)
      echo Build.DefinitionVersion: $(Build.DefinitionVersion)
      echo Build.QueuedBy: $(Build.QueuedBy)
      echo Build.QueuedById: $(Build.QueuedById)
      echo Build.Repository.Clean: $(Build.Repository.Clean)
      echo Build.Repository.LocalPath: $(Build.Repository.LocalPath)
      echo Build.Repository.Name: $(Build.Repository.Name)
      echo Build.Repository.Provider: $(Build.Repository.Provider)
      echo Build.Repository.Tfvc.Workspace: $(Build.Repository.Tfvc.Workspace)
      echo Build.Repository.Uri: $(Build.Repository.Uri)
      echo Build.RequestedFor: $(Build.RequestedFor)
      echo Build.RequestedForId: $(Build.RequestedForId)
      echo Build.SourceBranch: $(Build.SourceBranch)
      echo Build.SourceBranchName: $(Build.SourceBranchName)
      echo Build.SourcesDirectory: $(Build.SourcesDirectory)
      echo Build.SourcesDirectoryHash: $(Build.SourcesDirectoryHash)
      echo Build.SourceVersion: $(Build.SourceVersion)
      echo Build.SourceVersionMessage: $(Build.SourceVersionMessage)
      echo Build.StagingDirectory: $(Build.StagingDirectory)
      echo Build.Repository.Git.SubmoduleCheckout: $(Build.Repository.Git.SubmoduleCheckout)
      echo Build.SourceTfvcShelveset: $(Build.SourceTfvcShelveset)
    displayName: Print Build variables
    continueOnError: true