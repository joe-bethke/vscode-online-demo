apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "service.fullname" . }}
  labels:
{{ include "service.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "service.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
{{ include "service.labels" . | indent 8 }}
    spec:
    {{- with .Values.deployment.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ include "service.name" . }}
          image: {{ cat (include "service.deployment.image.repository" .) ":" (required "Error: missing required value .Values.deployment.image.tag" .Values.deployment.image.tag) | nospace }}
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          resources:
            limits:
              cpu: "0.5"
              memory: 500M
            requests:
              cpu: "0.25"
              memory: 300M
          ports:
            - name: http
              containerPort: {{ .Values.deployment.port.http }}
              protocol: TCP
            - name: https
              containerPort: {{ .Values.deployment.port.https }}
              protocol: TCP
          {{- if .Values.deployment.probes.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.deployment.probes.livenessPath }}
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: {{ .Values.deployment.probes.readinessPath }}
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          {{- else }}
          livenessProbe:
            httpGet:
              path: /
              port: 10080
            initialDelaySeconds: 200
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 10080
            initialDelaySeconds: 200
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          {{- end }}
          env:
            {{- $root := . }}
            {{- range $ref := .Values.deployment.secretsRef }}
            - name: {{ $ref }}
              valueFrom:
                secretKeyRef:
                  name: globalsecrets
                  key: {{ $ref }}
            {{- end }}
          resources: {{ toYaml .Values.deployment.resources | nindent 12 }}
      {{- with .Values.deployment.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.deployment.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.deployment.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
    {{- end }}
